apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: logging
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          templates:
            - condition:
                contains:
                  kubernetes.labels.type: "java"
              config:
                - type: container
                  paths:
                    - /var/log/containers/*${data.kubernetes.container.id}.log
                  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}'
                  multiline.negate: true
                  multiline.match: after
    
    processors:
      - dissect:
          when:
            regexp:
              message: "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}"
          tokenizer: "%{record_date} %{record_time} %{record_message}"
          field: "message"
          target_prefix: ""
      - script:
          when:
            has_fields: ['record_date', 'record_time']
          lang: javascript
          id: concat_filter
          source: >
            function process(event) {
                event.Put("record_timestamp", event.Get("record_date") + " " + event.Get("record_time"));
                return event;
            }
            function test() {
                var event = process(new Event({record_date: "2021-06-02", record_time: "13:15:03.077"}));
                if (event.Get("record_timestamp") !== "2021-06-02 13:15:03.077") {
                    throw "expected record_timestamp === '2021-06-02 13:15:03.077'";
                }
            }            
      - timestamp:
          when:
            has_fields: ['record_timestamp']
          field: record_timestamp
          layouts: "2006-01-02 15:04:05.000"
          ignore_missing: false
          ignore_failure: false
          test:
            - "2020-05-29 11:09:09.899"
            - "2020-04-11 23:09:09.899"
      - drop_fields:
          when:
            has_fields: ['record_message']
          fields: ["record_message"]              
      
    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']